/**
 * أداة ربط PayPal بـ Facebook المحسنة
 * دمج بين واجهة التكوين المتقدمة وآلية الربط التلقائي
 * المطور: محمود سعد - تم التحديث في 2025
 */

(function() {
    // إضافة الأنماط CSS للأداة
    const style = document.createElement('style');
    style.innerHTML = `
      .paypal-connector-backdrop {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.7);
        z-index: 999999;
        backdrop-filter: blur(3px);
      }
      
      .paypal-connector-popup {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 480px;
        background: linear-gradient(to bottom, #111827, #1f2937);
        border-radius: 16px;
        box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.7), 0 0 0 1px rgba(255, 255, 255, 0.1);
        z-index: 1000000;
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        color: #fff;
        overflow: hidden;
        animation: paypal-connector-slide-up 0.5s cubic-bezier(0.16, 1, 0.3, 1);
      }
      
      @keyframes paypal-connector-slide-up {
        from {
          opacity: 0;
          transform: translate(-50%, -45%);
          box-shadow: 0 15px 35px -12px rgba(0, 0, 0, 0.4);
        }
        to {
          opacity: 1;
          transform: translate(-50%, -50%);
          box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.7), 0 0 0 1px rgba(255, 255, 255, 0.1);
        }
      }
      
      .paypal-connector-header {
        padding: 24px 28px;
        border-bottom: 1px solid rgba(255, 255, 255, 0.08);
        background: linear-gradient(135deg, #0f172a 0%, #1e293b 100%);
        position: relative;
        overflow: hidden;
      }
      
      .paypal-connector-header::before {
        content: '';
        position: absolute;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: radial-gradient(circle, rgba(99, 102, 241, 0.08) 0%, rgba(99, 102, 241, 0) 70%);
        pointer-events: none;
      }
      
      .paypal-connector-header h2 {
        margin: 0;
        font-size: 22px;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 14px;
        color: white;
      }
      
      .paypal-connector-header-icon {
        background-color: rgba(255, 255, 255, 0.1);
        width: 40px;
        height: 40px;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
      }
      
      .paypal-connector-close {
        position: absolute;
        top: 20px;
        right: 20px;
        background: rgba(255, 255, 255, 0.08);
        border: none;
        color: white;
        width: 32px;
        height: 32px;
        border-radius: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.2s ease;
        font-size: 18px;
      }
      
      .paypal-connector-close:hover {
        background: rgba(255, 255, 255, 0.15);
        transform: rotate(90deg);
      }
      
      .paypal-connector-subtitle {
        color: rgba(255, 255, 255, 0.6);
        margin: 6px 0 0 54px;
        font-size: 14px;
      }
      
      .paypal-connector-content {
        padding: 28px;
      }
      
      .paypal-connector-step {
        display: none;
      }
      
      .paypal-connector-step.active {
        display: block;
        animation: paypal-connector-fade-in 0.4s ease-out;
      }
      
      @keyframes paypal-connector-fade-in {
        from {
          opacity: 0;
          transform: translateY(10px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }
      
      .paypal-connector-card {
        background-color: rgba(255, 255, 255, 0.04);
        border-radius: 12px;
        padding: 20px;
        margin-bottom: 20px;
        border: 1px solid rgba(255, 255, 255, 0.08);
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
      }
      
      .paypal-connector-card::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 1px;
        background: linear-gradient(90deg, rgba(99, 102, 241, 0), rgba(99, 102, 241, 0.4), rgba(99, 102, 241, 0));
      }
      
      .paypal-connector-card:hover {
        border-color: rgba(99, 102, 241, 0.3);
        box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2);
        background-color: rgba(255, 255, 255, 0.06);
      }
      
      .paypal-connector-card-title {
        color: rgba(255, 255, 255, 0.9);
        font-size: 16px;
        margin: 0 0 16px 0;
        display: flex;
        align-items: center;
        gap: 10px;
        font-weight: 500;
      }
      
      .paypal-connector-card-title svg {
        width: 18px;
        height: 18px;
        opacity: 0.9;
        color: #818cf8;
      }
      
      .paypal-connector-data-grid {
        display: grid;
        grid-template-columns: auto 1fr;
        gap: 12px 20px;
      }
      
      .paypal-connector-data-label {
        color: rgba(255, 255, 255, 0.5);
        font-size: 13px;
        font-weight: 500;
      }
      
      .paypal-connector-data-value {
        color: white;
        font-size: 14px;
        font-weight: 500;
        background-color: rgba(255, 255, 255, 0.05);
        border-radius: 8px;
        padding: 8px 12px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        border: 1px solid rgba(255, 255, 255, 0.08);
      }
      
      .paypal-connector-paypal-logo {
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 24px 0;
        padding: 20px;
        background: rgba(255, 255, 255, 0.02);
        border-radius: 12px;
        border: 1px solid rgba(255, 255, 255, 0.05);
      }
      
      .paypal-connector-paypal-logo img {
        height: 60px;
      }
      
      .paypal-connector-status {
        margin-top: 16px;
        padding: 14px 16px;
        border-radius: 10px;
        font-size: 14px;
        display: flex;
        align-items: center;
        gap: 12px;
        position: relative;
        z-index: 1;
        overflow: hidden;
      }
      
      .paypal-connector-status::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(45deg, rgba(0, 0, 0, 0.1), transparent);
        z-index: -1;
      }
      
      .paypal-connector-status.pending {
        background-color: rgba(234, 179, 8, 0.2);
        color: #fbbf24;
        border-left: 4px solid #f59e0b;
      }
      
      .paypal-connector-status.error {
        background-color: rgba(239, 68, 68, 0.15);
        color: #f87171;
        border-left: 4px solid #ef4444;
      }
      
      .paypal-connector-status.success {
        background-color: rgba(34, 197, 94, 0.15);
        color: #4ade80;
        border-left: 4px solid #22c55e;
      }
      
      .paypal-connector-loader {
        display: inline-block;
        width: 20px;
        height: 20px;
        border: 3px solid rgba(255, 255, 255, 0.1);
        border-radius: 50%;
        border-top-color: #818cf8;
        animation: paypal-connector-spin 1s linear infinite;
        vertical-align: middle;
      }
      
      @keyframes paypal-connector-spin {
        to { transform: rotate(360deg); }
      }
      
      .paypal-connector-btn-container {
        display: flex;
        gap: 12px;
        justify-content: flex-end;
        margin-top: 24px;
      }
      
      .paypal-connector-btn {
        padding: 10px 18px;
        border-radius: 10px;
        border: none;
        font-weight: 600;
        font-size: 14px;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
        position: relative;
        overflow: hidden;
        letter-spacing: 0.3px;
      }
      
      .paypal-connector-btn-primary {
        background: linear-gradient(135deg, #4f46e5 0%, #6366f1 100%);
        color: white;
        box-shadow: 0 4px 6px -1px rgba(99, 102, 241, 0.4), 0 2px 4px -1px rgba(99, 102, 241, 0.2);
      }
      
      .paypal-connector-btn-secondary {
        background-color: rgba(255, 255, 255, 0.08);
        color: rgba(255, 255, 255, 0.8);
        border: 1px solid rgba(255, 255, 255, 0.12);
      }
      
      .paypal-connector-btn::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
        transition: all 0.6s ease;
      }
      
      .paypal-connector-btn:hover::before {
        left: 100%;
      }
      
      .paypal-connector-btn:hover {
        transform: translateY(-2px);
      }
      
      .paypal-connector-btn-primary:hover {
        box-shadow: 0 8px 15px -3px rgba(99, 102, 241, 0.5), 0 4px 6px -2px rgba(99, 102, 241, 0.3);
        background: linear-gradient(135deg, #6366f1 0%, #818cf8 100%);
      }
      
      .paypal-connector-btn-secondary:hover {
        background-color: rgba(255, 255, 255, 0.12);
        border-color: rgba(255, 255, 255, 0.2);
      }
      
      .paypal-connector-btn:disabled {
        background: rgba(255, 255, 255, 0.1);
        color: rgba(255, 255, 255, 0.4);
        cursor: not-allowed;
        border-color: rgba(255, 255, 255, 0.05);
        transform: none;
        box-shadow: none;
      }
      
      .paypal-connector-btn:disabled::before {
        display: none;
      }
      
      .paypal-connector-footer {
        background-color: rgba(15, 23, 42, 0.8);
        padding: 15px 25px;
        text-align: center;
        font-size: 12px;
        color: rgba(255, 255, 255, 0.4);
        border-top: 1px solid rgba(255, 255, 255, 0.05);
      }
      
      .paypal-connector-footer span {
        color: rgba(255, 255, 255, 0.6);
      }
      
      .paypal-connector-primary-info {
        display: flex;
        align-items: center;
        margin-top: 16px;
        padding: 14px;
        border-radius: 10px;
        background: rgba(34, 197, 94, 0.1);
        border-left: 3px solid #22c55e;
      }
      
      .paypal-connector-primary-icon {
        margin-right: 12px;
        color: #4ade80;
      }
      
      .paypal-connector-divider {
        height: 1px;
        background: linear-gradient(90deg, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0));
        margin: 24px 0;
      }
      
      .paypal-connector-summary {
        background-color: rgba(99, 102, 241, 0.08);
        border-radius: 12px;
        padding: 16px;
        margin-top: 20px;
        border: 1px solid rgba(99, 102, 241, 0.2);
      }
      
      .paypal-connector-summary-title {
        font-size: 14px;
        font-weight: 600;
        color: #818cf8;
        margin-bottom: 12px;
        display: flex;
        align-items: center;
        gap: 8px;
      }
      
      .paypal-connector-summary-item {
        display: flex;
        justify-content: space-between;
        padding: 8px 0;
        border-bottom: 1px solid rgba(255, 255, 255, 0.08);
      }
      
      .paypal-connector-summary-item:last-child {
        border-bottom: none;
      }
      
      .paypal-connector-summary-label {
        color: rgba(255, 255, 255, 0.6);
        font-size: 13px;
      }
      
      .paypal-connector-summary-value {
        color: white;
        font-size: 13px;
        font-weight: 500;
      }
      
      .paypal-connector-logs {
        margin-top: 16px;
        max-height: 150px;
        overflow-y: auto;
        background-color: rgba(0, 0, 0, 0.2);
        border-radius: 8px;
        padding: 12px;
        font-family: 'Courier New', monospace;
        font-size: 12px;
        color: rgba(255, 255, 255, 0.7);
      }
      
      .paypal-connector-log-entry {
        margin-bottom: 6px;
        padding-bottom: 6px;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
      }
      
      .paypal-connector-log-entry:last-child {
        margin-bottom: 0;
        padding-bottom: 0;
        border-bottom: none;
      }
      
      .paypal-connector-log-time {
        color: #a5f3fc;
        margin-right: 6px;
      }
      
      .paypal-connector-log-type {
        display: inline-block;
        padding: 2px 6px;
        border-radius: 4px;
        margin-right: 6px;
        font-size: 10px;
        font-weight: bold;
      }
      
      .paypal-connector-log-type.info {
        background-color: rgba(59, 130, 246, 0.2);
        color: #93c5fd;
      }
      
      .paypal-connector-log-type.success {
        background-color: rgba(34, 197, 94, 0.2);
        color: #86efac;
      }
      
      .paypal-connector-log-type.error {
        background-color: rgba(239, 68, 68, 0.2);
        color: #fca5a5;
      }
      
      .paypal-connector-log-message {
        color: rgba(255, 255, 255, 0.8);
      }
      
      .paypal-connector-code-block {
        background-color: rgba(0, 0, 0, 0.3);
        border-radius: 6px;
        padding: 12px;
        margin: 12px 0;
        font-family: 'Courier New', monospace;
        font-size: 12px;
        color: #a5f3fc;
        max-height: 120px;
        overflow-y: auto;
        white-space: pre-wrap;
        word-break: break-all;
      }
      
      /* أنماط للإدخال اليدوي */
      .paypal-connector-manual-input {
        margin-top: 20px;
        background-color: rgba(255, 255, 255, 0.03);
        border-radius: 10px;
        padding: 16px;
        border: 1px dashed rgba(255, 255, 255, 0.15);
      }
      
      .paypal-connector-manual-input h4 {
        font-size: 14px;
        margin: 0 0 12px 0;
        color: rgba(255, 255, 255, 0.8);
        display: flex;
        align-items: center;
        gap: 8px;
      }
      
      .paypal-connector-manual-input input {
        width: 100%;
        background-color: rgba(0, 0, 0, 0.2);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 8px;
        padding: 10px 12px;
        color: white;
        font-size: 14px;
        margin-bottom: 10px;
        outline: none;
      }
      
      .paypal-connector-manual-input input:focus {
        border-color: rgba(99, 102, 241, 0.5);
        box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.2);
      }
      
      .paypal-connector-manual-input input::placeholder {
        color: rgba(255, 255, 255, 0.3);
      }
      
      .paypal-connector-toggle {
        font-size: 13px;
        color: #818cf8;
        background: none;
        border: none;
        padding: 0;
        cursor: pointer;
        text-decoration: underline;
        margin-top: 10px;
        display: inline-block;
      }
      
      .paypal-connector-toggle:hover {
        color: #a5b4fc;
      }

      /* أنماط زر تهيئة الاتصال الخارجي */
      .paypal-connector-floating-btn {
        position: fixed;
        bottom: 20px;
        right: 20px;
        padding: 14px 24px;
        background-color: #003087; 
        color: white;
        border: none;
        border-radius: 30px;
        font-weight: bold;
        font-size: 16px;
        box-shadow: 0 4px 12px rgba(0, 48, 135, 0.3);
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        font-family: Arial, sans-serif;
        z-index: 999990;
      }
      
      .paypal-connector-floating-btn svg {
        margin-right: 8px;
      }
      
      .paypal-connector-floating-btn:hover {
        background-color: #0070ba;
        transform: translateY(-2px);
        box-shadow: 0 6px 16px rgba(0, 48, 135, 0.4);
      }
      
      /* أنماط خاصة بمؤشر الحالة العائم */
      .paypal-connector-floating-status {
        position: fixed;
        bottom: 80px;
        right: 20px;
        padding: 12px 18px;
        background-color: white;
        color: #333;
        border-radius: 12px;
        font-size: 14px;
        max-width: 280px;
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
        display: none;
        animation: fadeIn 0.3s ease;
        font-family: Arial, sans-serif;
        direction: rtl;
        text-align: right;
        line-height: 1.5;
        border-right: 4px solid #003087;
        z-index: 999991;
      }
      
      @keyframes fadeIn {
        from { opacity: 0; transform: translateY(10px); }
        to { opacity: 1; transform: translateY(0); }
      }
      
      @keyframes pulse {
        0% { transform: scale(1); }
        50% { transform: scale(1.05); }
        100% { transform: scale(1); }
      }
      
      @keyframes fadeOut {
        from { opacity: 1; transform: translateY(0); }
        to { opacity: 0; transform: translateY(10px); }
      }
    `;
    document.head.appendChild(style);
    
    // إنشاء الواجهة وتهيئة الدوال
    createFloatingButton();
    
    // دالة إنشاء الزر العائم
    function createFloatingButton() {
      // إنشاء زر عائم للوصول السريع
      const floatingBtn = document.createElement('button');
      floatingBtn.className = 'paypal-connector-floating-btn';
      floatingBtn.innerHTML = `
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="white">
          <path d="M20.067 8.31c.344.441.475.909.39 1.426-.238 1.398-1.624 2.188-3.012 2.188h-.05c-.125.547-.399 1.039-.823 1.481-.523.481-1.169.747-1.892.774-.1.003-.2.003-.3.003-.375 0-.75-.043-1.125-.149-.249.136-.524.224-.799.288-.575.172-1.168.213-1.75.124a2.36 2.36 0 0 1-.574-.162c-.025.099-.05.198-.1.297-.273.833-1.148 1.355-2.127 1.243-.823-.074-1.45-.615-1.624-1.355-.1-.395-.05-.8.124-1.152.15-.313.375-.582.649-.757.474-.321.998-.47 1.548-.494V7.795c0-1.039.823-1.92 1.92-1.92h6.813c.326 0 .651.074.948.198.724.346 1.222.976 1.3 1.772.025.123.05.247.05.371.276.05.55.149.8.297z"/>
        </svg>
        ربط حساب PayPal
      `;
      floatingBtn.addEventListener('click', function() {
        // إظهار رسالة حالة عائمة
        showFloatingStatus("جاري فتح أداة الربط...");
        
        // إنشاء الواجهة الرئيسية
        createInterface();
      });
      
      // إنشاء مؤشر الحالة العائم
      const floatingStatus = document.createElement('div');
      floatingStatus.className = 'paypal-connector-floating-status';
      
      // إضافة العناصر إلى الصفحة
      document.body.appendChild(floatingBtn);
      document.body.appendChild(floatingStatus);
      
      // دالة عرض رسائل الحالة العائمة
      window.showFloatingStatus = function(message, isError = false) {
        floatingStatus.innerHTML = '';
        
        // إنشاء أيقونة مناسبة للحالة
        const icon = document.createElement('span');
        icon.style.marginLeft = '8px';
        icon.style.display = 'inline-block';
        icon.style.verticalAlign = 'middle';
        
        if (isError) {
          icon.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="#D8000C">
            <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z"/>
          </svg>`;
          floatingStatus.style.borderRight = '4px solid #D8000C';
          floatingStatus.style.backgroundColor = '#FFF7F7';
        } else {
          icon.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="#0070ba">
            <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
          </svg>`;
          floatingStatus.style.borderRight = '4px solid #0070ba';
          floatingStatus.style.backgroundColor = 'white';
        }
        
        // إنشاء النص
        const textSpan = document.createElement('span');
        textSpan.textContent = message;
        textSpan.style.display = 'inline-block';
        textSpan.style.verticalAlign = 'middle';
        textSpan.style.color = isError ? '#D8000C' : '#333';
        
        // إضافة الأيقونة والنص
        floatingStatus.appendChild(icon);
        floatingStatus.appendChild(textSpan);
        
        // إظهار الرسالة
        floatingStatus.style.display = 'block';
        floatingStatus.style.animation = 'fadeIn 0.3s ease';
        
        // إخفاء الرسالة بعد 3 ثوانٍ
        setTimeout(() => {
          floatingStatus.style.animation = 'fadeOut 0.3s ease forwards';
          setTimeout(() => {
            floatingStatus.style.display = 'none';
          }, 300);
        }, 3000);
      };
      
      // التحقق من عملية الإرجاع من PayPal
      checkPayPalReturn();
    }
  
    // دالة التحقق من إرجاع PayPal عند تحميل الصفحة
    function checkPayPalReturn() {
      // التحقق مما إذا كانت الصفحة الحالية هي صفحة إعادة التوجيه
      if (window.location.href.includes('third_party_external_result') && 
          window.location.href.includes('success=1') && 
          window.location.href.includes('paypal_added=1')) {
          
          try {
              // استخراج المعرفات من الرابط
              var url = new URL(window.location.href);
              var urlParams = url.searchParams;
              var billingToken = urlParams.get('billing_token');
              var accountId = urlParams.get('account_id');
var merchantGroup = urlParams.get('merchant_group');
              var paypalToken = urlParams.get('token');
              
              if (paypalToken) {
                  paypalToken = paypalToken.replace('EC-', '');
              }
              
              if (billingToken && accountId) {
                  // عرض رسالة عائمة بالنجاح
                  showFloatingStatus("تم العودة من PayPal! جارِ إكمال عملية الربط...");
                  
                  // تأخير صغير ثم إنشاء الواجهة وإكمال العملية
                  setTimeout(() => {
                      createInterface();
                      // نقوم بالانتقال للخطوة الثالثة وملء البيانات
                      if (window.paypalConnectorData) {
                          window.paypalConnectorData.billing_token = billingToken;
                          window.paypalConnectorData.accountId = accountId;
                          
                          // الانتقال للخطوة الثالثة
                          goToStep(3);
                          savePayPalCompletion();
                      }
                  }, 1500);
              }
          } catch (error) {
              console.error("خطأ في استخراج معلومات URL:", error);
              showFloatingStatus("حدث خطأ أثناء معالجة البيانات المرجعة من PayPal", true);
          }
      }
    }
    
    // إنشاء هيكل الواجهة
    function createInterface() {
      // إنشاء الخلفية المعتمة
      const backdrop = document.createElement('div');
      backdrop.className = 'paypal-connector-backdrop';
      document.body.appendChild(backdrop);
      
      // إنشاء النافذة المنبثقة
      const popup = document.createElement('div');
      popup.className = 'paypal-connector-popup';
      
      // استخراج معرف الحساب من العنوان URL
      const url = window.location.href;
      const accountIdMatch = url.match(/asset_id=(\d+)/);
      const accountId = accountIdMatch ? accountIdMatch[1] : '';
      
      if (!accountId) {
        alert('لم يتم العثور على معرف الحساب في URL. يرجى التأكد من أنك في صفحة إعدادات الحساب الإعلاني.');
        backdrop.remove();
        return;
      }
      
      // إضافة محتوى النافذة المنبثقة
      popup.innerHTML = `
        <div class="paypal-connector-header">
          <h2>
            <div class="paypal-connector-header-icon">
              <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <rect x="2" y="5" width="20" height="14" rx="2" />
                <line x1="2" y1="10" x2="22" y2="10" />
              </svg>
            </div>
            إضافة طريقة دفع PayPal
          </h2>
          <p class="paypal-connector-subtitle">ربط وتعيين PayPal كطريقة دفع أساسية</p>
          <button class="paypal-connector-close">&times;</button>
        </div>
        
        <div class="paypal-connector-content">
          <!-- الخطوة 1: بدء العملية -->
          <div class="paypal-connector-step active" data-step="1">
            <div class="paypal-connector-card">
              <h3 class="paypal-connector-card-title">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <path d="M20 7h-9"></path>
                  <path d="M14 17H6"></path>
                  <circle cx="8" cy="7" r="2"></circle>
                  <circle cx="17" cy="17" r="2"></circle>
                </svg>
                معلومات الحساب
              </h3>
              <div class="paypal-connector-data-grid">
                <div class="paypal-connector-data-label">معرف الحساب</div>
                <div class="paypal-connector-data-value" id="paypal-connector-account-id">${accountId}</div>
                
                <div class="paypal-connector-data-label">الحالة</div>
                <div class="paypal-connector-data-value" id="paypal-connector-account-status">جاهز للربط</div>
              </div>
            </div>
            
            <div class="paypal-connector-paypal-logo">
              <img src="https://www.paypalobjects.com/webstatic/mktg/logo/pp_cc_mark_111x69.jpg" alt="PayPal Logo">
            </div>
            
            <p>سيتم ربط حساب PayPal بحساب Facebook للأعمال وتعيينه كطريقة دفع أساسية. يجب أن يكون لديك حساب PayPal نشط لإكمال هذه العملية.</p>
            
            <div id="paypal-connector-connect-status" class="paypal-connector-status pending">
              <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <circle cx="12" cy="12" r="10"></circle>
                <line x1="12" y1="8" x2="12" y2="12"></line>
                <line x1="12" y1="16" x2="12.01" y2="16"></line>
              </svg>
              انقر على "ربط وتعيين كأساسي" للمتابعة
            </div>
            
            <div class="paypal-connector-logs" id="paypal-connector-logs" style="display: none;"></div>
            
            <div class="paypal-connector-btn-container">
              <button class="paypal-connector-btn paypal-connector-btn-secondary" id="paypal-connector-cancel-btn">إلغاء</button>
              <button class="paypal-connector-btn paypal-connector-btn-primary" id="paypal-connector-connect-btn">
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <path d="M5 12h14"></path>
                  <path d="M12 5l7 7-7 7"></path>
                </svg>
                ربط وتعيين كأساسي
              </button>
            </div>
          </div>
        
          <!-- الخطوة 2: ربط الحساب -->
          <div class="paypal-connector-step" data-step="2">
            <div class="paypal-connector-card">
              <h3 class="paypal-connector-card-title">
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <circle cx="12" cy="12" r="10"></circle>
                  <polyline points="12 6 12 12 16 14"></polyline>
                </svg>
                جارِ ربط الحساب
              </h3>
              <div class="paypal-connector-data-grid">
                <div class="paypal-connector-data-label">معرف الحساب</div>
                <div class="paypal-connector-data-value" id="paypal-connector-account-id-step2">${accountId}</div>
                
                <div class="paypal-connector-data-label">الحالة</div>
                <div class="paypal-connector-data-value" id="paypal-connector-account-status-step2">قيد التنفيذ</div>
              </div>
            </div>
            
            <div id="paypal-connector-link-status" class="paypal-connector-status pending">
              <div class="paypal-connector-loader"></div>
              جارِ إنشاء رابط PayPal...
            </div>
            
            <div id="paypal-connector-paypal-data" style="display: none;">
              <div class="paypal-connector-card">
                <h3 class="paypal-connector-card-title">
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <rect x="2" y="5" width="20" height="14" rx="2" />
                    <line x1="2" y1="10" x2="22" y2="10" />
                  </svg>
                  بيانات PayPal
                </h3>
                <div class="paypal-connector-data-grid">
                  <div class="paypal-connector-data-label">رمز الجلسة</div>
                  <div class="paypal-connector-data-value" id="paypal-connector-token-value">-</div>
                  
                  <div class="paypal-connector-data-label">رابط PayPal</div>
                  <div class="paypal-connector-data-value" id="paypal-connector-redirect-url">-</div>
                  
                  <div class="paypal-connector-data-label">معرف الطلب</div>
                  <div class="paypal-connector-data-value" id="paypal-connector-request-id">-</div>
                </div>
              </div>
            </div>
            
            <!-- إضافة قسم الإدخال اليدوي (مخفي افتراضيًا) -->
            <div id="paypal-connector-manual-input" class="paypal-connector-manual-input" style="display: none;">
              <h4>
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path>
                  <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>
                </svg>
                إدخال البيانات يدويًا
              </h4>
              <input type="text" id="paypal-connector-manual-token" placeholder="رمز الجلسة" />
              <input type="text" id="paypal-connector-manual-url" placeholder="رابط PayPal" />
              <input type="text" id="paypal-connector-manual-request-id" placeholder="معرف الطلب (اختياري)" />
              <button id="paypal-connector-apply-manual" class="paypal-connector-btn paypal-connector-btn-primary" style="width: 100%; margin-top: 10px;">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <path d="M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"></path>
                  <polyline points="17 21 17 13 7 13 7 21"></polyline>
                  <polyline points="7 3 7 8 15 8"></polyline>
                </svg>
                تطبيق البيانات
              </button>
            </div>

            <!-- زر بدء تهيئة الاتصال التلقائي -->
            <div id="paypal-connector-auto-init" class="paypal-connector-manual-input" style="display: block; margin-top: 20px;">
              <h4>
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <polygon points="13 2 3 14 12 14 11 22 21 10 12 10 13 2"></polygon>
                </svg>
                تهيئة الاتصال تلقائيًا
              </h4>
              <p style="color: rgba(255, 255, 255, 0.6); font-size: 13px; margin-bottom: 12px;">
                انقر على الزر أدناه لبدء تهيئة اتصال PayPal تلقائيًا مع Facebook. سيتم استخراج روابط الاتصال اللازمة.
              </p>
              <button id="paypal-connector-auto-init-btn" class="paypal-connector-btn paypal-connector-btn-primary" style="width: 100%;">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <polygon points="13 2 3 14 12 14 11 22 21 10 12 10 13 2"></polygon>
                </svg>
                بدء تهيئة الاتصال
              </button>
            </div>
            
            <button id="paypal-connector-toggle-manual" class="paypal-connector-toggle" style="display: none;">
              إدخال البيانات يدويًا
            </button>
            
            <div class="paypal-connector-btn-container">
              <button class="paypal-connector-btn paypal-connector-btn-secondary" id="paypal-connector-back-btn">رجوع</button>
              <button class="paypal-connector-btn paypal-connector-btn-primary" id="paypal-connector-continue-btn" disabled>
                <div class="paypal-connector-loader"></div>
                جارِ التجهيز...
              </button>
            </div>
          </div>
          
          <!-- الخطوة 3: الحصول على معرف طريقة الدفع وحفظها -->
          <div class="paypal-connector-step" data-step="3">
            <div class="paypal-connector-card">
              <h3 class="paypal-connector-card-title">
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
                  <polyline points="22 4 12 14.01 9 11.01"></polyline>
                </svg>
                حفظ بيانات PayPal
              </h3>
              <div class="paypal-connector-data-grid">
                <div class="paypal-connector-data-label">معرف الحساب</div>
                <div class="paypal-connector-data-value" id="paypal-connector-account-id-step3"></div>
                
                <div class="paypal-connector-data-label">رمز الجلسة</div>
                <div class="paypal-connector-data-value" id="paypal-connector-billing-token-step3">-</div>
              </div>
            </div>
            
            <div id="paypal-connector-completion-status" class="paypal-connector-status pending">
              <div class="paypal-connector-loader"></div>
              جارِ إكمال عملية الربط...
            </div>
            
            <div id="paypal-connector-completion-data" style="display:none;">
              <div class="paypal-connector-card">
                <h3 class="paypal-connector-card-title">
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <rect x="2" y="5" width="20" height="14" rx="2" />
                    <line x1="2" y1="10" x2="22" y2="10" />
                  </svg>
                  بيانات طريقة الدفع
                </h3>
                <div class="paypal-connector-data-grid">
                  <div class="paypal-connector-data-label">معرف طريقة الدفع</div>
                  <div class="paypal-connector-data-value" id="paypal-connector-payment-method-id">-</div>
                  
                  <div class="paypal-connector-data-label">حالة الإكمال</div>
                  <div class="paypal-connector-data-value" id="paypal-connector-completion-success">-</div>
                </div>
              </div>
            </div>
            
            <div class="paypal-connector-logs" id="paypal-connector-completion-logs" style="display: none;"></div>
            
            <div class="paypal-connector-btn-container">
              <button class="paypal-connector-btn paypal-connector-btn-secondary" id="paypal-connector-back-btn2">رجوع</button>
              <button class="paypal-connector-btn paypal-connector-btn-primary" id="paypal-connector-save-btn" disabled>
                <div class="paypal-connector-loader"></div>
                جارِ المعالجة...
              </button>
            </div>
          </div>
          
          <!-- الخطوة 4: تعيين PayPal كطريقة دفع أساسية -->
          <div class="paypal-connector-step" data-step="4">
            <div class="paypal-connector-card">
              <h3 class="paypal-connector-card-title">
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
                  <polyline points="22 4 12 14.01 9 11.01"></polyline>
                </svg>
                تعيين PayPal كطريقة دفع أساسية
              </h3>
              <div class="paypal-connector-data-grid">
                <div class="paypal-connector-data-label">معرف الحساب</div>
                <div class="paypal-connector-data-value" id="paypal-connector-account-id-step4"></div>
                
                <div class="paypal-connector-data-label">معرف طريقة الدفع</div>
                <div class="paypal-connector-data-value" id="paypal-connector-payment-method-id-step4">-</div>
              </div>
            </div>
            
            <div id="paypal-connector-primary-status" class="paypal-connector-status pending">
              <div class="paypal-connector-loader"></div>
              جارِ تعيين PayPal كطريقة دفع أساسية...
            </div>
            
            <div id="paypal-connector-primary-info" class="paypal-connector-primary-info" style="display: none;">
              <div class="paypal-connector-primary-icon">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
                  <polyline points="22 4 12 14.01 9 11.01"></polyline>
                </svg>
              </div>
              <div>تم تعيين PayPal كطريقة الدفع الأساسية بنجاح!</div>
            </div>
            
            <div class="paypal-connector-logs" id="paypal-connector-primary-logs" style="display: none;"></div>
            
            <div class="paypal-connector-btn-container">
              <button class="paypal-connector-btn paypal-connector-btn-secondary" id="paypal-connector-back-btn3">رجوع</button>
              <button class="paypal-connector-btn paypal-connector-btn-primary" id="paypal-connector-set-primary-btn">
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
                  <polyline points="22 4 12 14.01 9 11.01"></polyline>
                </svg>
                تعيين كأساسي
              </button>
            </div>
          </div>
          
          <!-- الخطوة 5: اكتمال العملية -->
          <div class="paypal-connector-step" data-step="5">
            <div class="paypal-connector-card">
              <h3 class="paypal-connector-card-title">
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
                  <polyline points="22 4 12 14.01 9 11.01"></polyline>
                </svg>
                اكتملت العملية بنجاح
              </h3>
              
              <div class="paypal-connector-primary-info" style="display: flex;">
                <div class="paypal-connector-primary-icon">
                  <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
                    <polyline points="22 4 12 14.01 9 11.01"></polyline>
                  </svg>
                </div>
                <div>
                  <div>تم ربط PayPal وتعيينه كطريقة الدفع الأساسية بنجاح</div>
                  <div style="margin-top: 5px; font-size: 12px; opacity: 0.8;">يمكنك الآن استخدام PayPal لجميع معاملاتك على Facebook</div>
                </div>
              </div>
              
              <div class="paypal-connector-divider"></div>
              
              <div class="paypal-connector-summary">
                <div class="paypal-connector-summary-title">
                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <polyline points="22 12 16 12 14 15 10 15 8 12 2 12"></polyline>
                    <path d="M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"></path>
                  </svg>
                  ملخص العملية
                </div>
                
                <div class="paypal-connector-summary-item">
                  <div class="paypal-connector-summary-label">معرف الحساب</div>
                  <div class="paypal-connector-summary-value" id="paypal-connector-account-id-final"></div>
                </div>
                
                <div class="paypal-connector-summary-item">
                  <div class="paypal-connector-summary-label">معرف طريقة الدفع</div>
                  <div class="paypal-connector-summary-value" id="paypal-connector-credential-id-final"></div>
                </div>
                
                <div class="paypal-connector-summary-item">
                  <div class="paypal-connector-summary-label">وقت التعيين</div>
                  <div class="paypal-connector-summary-value" id="paypal-connector-completion-time"></div>
                </div>
              </div>
            </div>
            
            <div class="paypal-connector-logs" id="paypal-connector-final-logs" style="display: none;"></div>
            
            <div class="paypal-connector-btn-container">
              <button class="paypal-connector-btn paypal-connector-btn-secondary" id="paypal-connector-refresh-btn">تحديث الصفحة</button>
              <button class="paypal-connector-btn paypal-connector-btn-primary" id="paypal-connector-close-btn">
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <line x1="18" y1="6" x2="6" y2="18"></line>
                  <line x1="6" y1="6" x2="18" y2="18"></line>
                </svg>
                إغلاق
              </button>
            </div>
          </div>
        </div>
        
        <div class="paypal-connector-footer">
          تم التطوير بواسطة <span>محمود سعد</span> &copy; ${new Date().getFullYear()}
        </div>
      `;
      
      document.body.appendChild(popup);
      
      // إنشاء كائن لتخزين بيانات الربط
      window.paypalConnectorData = {
        accountId: accountId,
        userId: null,
        fb_dtsg: null,
        businessId: null,
        billing_token: null,
        redirect_url: null,
        requestId: null,
        paymentMethodId: null,
        timestamp: null,
        flowSessionId: null,
        uplSessionId: null,
        lsd: null
      };
      
      // ربط الأحداث
      popup.querySelector('.paypal-connector-close').addEventListener('click', closePopup);
      document.getElementById('paypal-connector-cancel-btn').addEventListener('click', closePopup);
      document.getElementById('paypal-connector-close-btn').addEventListener('click', closePopup);
      document.getElementById('paypal-connector-connect-btn').addEventListener('click', startConnectionProcess);
      document.getElementById('paypal-connector-back-btn').addEventListener('click', () => goToStep(1));
      document.getElementById('paypal-connector-back-btn2').addEventListener('click', () => goToStep(2));
      document.getElementById('paypal-connector-back-btn3').addEventListener('click', () => goToStep(3));
      document.getElementById('paypal-connector-continue-btn').addEventListener('click', proceedToPayPal);
      document.getElementById('paypal-connector-save-btn').addEventListener('click', savePayPalCompletion);
      document.getElementById('paypal-connector-set-primary-btn').addEventListener('click', setPrimaryPaymentMethod);
      document.getElementById('paypal-connector-refresh-btn').addEventListener('click', () => window.location.reload());
      
      // إضافة أحداث للإدخال اليدوي
      document.getElementById('paypal-connector-toggle-manual').addEventListener('click', toggleManualInput);
      document.getElementById('paypal-connector-apply-manual').addEventListener('click', applyManualInput);
      
      // إضافة حدث لتهيئة الاتصال التلقائي
      document.getElementById('paypal-connector-auto-init-btn').addEventListener('click', autoInitializeConnection);
      
// تسجيل المعرفات والأدوات في وحدة التحكم
      log('info', 'تم تهيئة أداة ربط وتعيين PayPal | معرف الحساب: ' + accountId);
      
      // دالة إغلاق النافذة المنبثقة
      function closePopup() {
        popup.remove();
        backdrop.remove();
        log('info', 'تم إغلاق الأداة');
      }
    }

    // === دوال المساعدة والتنقل ===
    
    // دالة الانتقال بين الخطوات
    function goToStep(stepNumber) {
      const steps = document.querySelectorAll('.paypal-connector-step');
      steps.forEach(step => {
        step.classList.remove('active');
      });
      
      const targetStep = document.querySelector(`.paypal-connector-step[data-step="${stepNumber}"]`);
      if (targetStep) {
        targetStep.classList.add('active');
      }
      
      // إذا كانت الخطوة 3، تحديث بيانات الحساب والرمز
      if (stepNumber === 3) {
        document.getElementById('paypal-connector-account-id-step3').textContent = window.paypalConnectorData.accountId;
        document.getElementById('paypal-connector-billing-token-step3').textContent = window.paypalConnectorData.billing_token || '-';
      }
      
      // إذا كانت الخطوة 4، تحديث بيانات الحساب ومعرف طريقة الدفع
      if (stepNumber === 4) {
        document.getElementById('paypal-connector-account-id-step4').textContent = window.paypalConnectorData.accountId;
        document.getElementById('paypal-connector-payment-method-id-step4').textContent = window.paypalConnectorData.paymentMethodId || '-';
      }
      
      // إذا كانت الخطوة 5، تحديث ملخص العملية
      if (stepNumber === 5) {
        document.getElementById('paypal-connector-account-id-final').textContent = window.paypalConnectorData.accountId;
        document.getElementById('paypal-connector-credential-id-final').textContent = window.paypalConnectorData.paymentMethodId || 'غير متوفر';
        document.getElementById('paypal-connector-completion-time').textContent = new Date().toLocaleString();
      }
      
      log('info', `الانتقال إلى الخطوة ${stepNumber}`);
    }
    
    // دالة عرض/إخفاء واجهة الإدخال اليدوي
    function toggleManualInput() {
      const manualInput = document.getElementById('paypal-connector-manual-input');
      const toggleButton = document.getElementById('paypal-connector-toggle-manual');
      
      if (manualInput.style.display === 'none') {
        manualInput.style.display = 'block';
        toggleButton.textContent = 'إخفاء الإدخال اليدوي';
      } else {
        manualInput.style.display = 'none';
        toggleButton.textContent = 'إدخال البيانات يدويًا';
      }
    }
    
    // دالة توليد معرف جلسة
    function generateSessionId() {
      return 'upl_' + Date.now() + '_' + Math.random().toString(36).substring(2, 15);
    }
    
    // دالة توليد معرف جلسة التدفق
    function generateFlowSessionId() {
      return 'upl_wizard_' + Date.now() + '_' + Math.random().toString(36).substring(2, 15);
    }
    
    // دالة تطبيق البيانات المدخلة يدويًا
    function applyManualInput() {
      const tokenInput = document.getElementById('paypal-connector-manual-token');
      const urlInput = document.getElementById('paypal-connector-manual-url');
      const requestIdInput = document.getElementById('paypal-connector-manual-request-id');
      
      const token = tokenInput.value.trim();
      const url = urlInput.value.trim();
      const requestId = requestIdInput.value.trim();
      
      if (!token || !url) {
        log('error', 'يجب إدخال رمز الجلسة ورابط PayPal');
        return;
      }
      
      // إنشاء معرفات جلسة جديدة عند الإدخال اليدوي
      const uplSessionId = generateSessionId();
      const flowSessionId = generateFlowSessionId();
      
      // تخزين البيانات المدخلة يدويًا
      window.paypalConnectorData.billing_token = token;
      window.paypalConnectorData.redirect_url = url;
      window.paypalConnectorData.uplSessionId = uplSessionId;
      window.paypalConnectorData.flowSessionId = flowSessionId;
      
      if (requestId) {
        window.paypalConnectorData.requestId = requestId;
      }
      
      // تحديث واجهة المستخدم
      document.getElementById('paypal-connector-token-value').textContent = token;
      document.getElementById('paypal-connector-redirect-url').textContent = url;
      if (requestId) {
        document.getElementById('paypal-connector-request-id').textContent = requestId;
      }
      
      // سجل معلومات إضافية
      log('info', `معرف جلسة التدفق (تم إنشاؤه): ${flowSessionId}`);
      log('info', `معرف جلسة UPL (تم إنشاؤه): ${uplSessionId}`);
      
      // إظهار البيانات وتمكين زر المتابعة
      document.getElementById('paypal-connector-paypal-data').style.display = 'block';
      const continueBtn = document.getElementById('paypal-connector-continue-btn');
      continueBtn.disabled = false;
      continueBtn.innerHTML = `
        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M5 12h14"></path>
          <path d="M12 5l7 7-7 7"></path>
        </svg>
        متابعة إلى PayPal
      `;
      
      // تحديث حالة الاتصال
      updateLinkStatus('success', 'تم إدخال بيانات PayPal يدويًا. انقر على "متابعة إلى PayPal" لإكمال العملية.');
      
      // إخفاء واجهة الإدخال اليدوي
      document.getElementById('paypal-connector-manual-input').style.display = 'none';
      document.getElementById('paypal-connector-toggle-manual').textContent = 'تعديل البيانات المدخلة';
      
      log('info', 'تم إدخال بيانات PayPal يدويًا');
    }
    
    // دالة تحديث حالة الاتصال
    function updateLinkStatus(status, message) {
      const statusElement = document.getElementById('paypal-connector-link-status');
      statusElement.className = `paypal-connector-status ${status}`;
      
      if (status === 'pending') {
        statusElement.innerHTML = `<div class="paypal-connector-loader"></div>${message}`;
      } else if (status === 'success') {
        statusElement.innerHTML = `
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
            <polyline points="22 4 12 14.01 9 11.01"></polyline>
          </svg>
          ${message}
        `;
      } else if (status === 'error') {
        statusElement.innerHTML = `
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <circle cx="12" cy="12" r="10"></circle>
            <line x1="12" y1="8" x2="12" y2="12"></line>
            <line x1="12" y1="16" x2="12.01" y2="16"></line>
          </svg>
          ${message}
        `;
      }
    }
    
    // دالة تحديث حالة الإكمال
    function updateCompletionStatus(status, message) {
      const statusElement = document.getElementById('paypal-connector-completion-status');
      statusElement.className = `paypal-connector-status ${status}`;
      
      if (status === 'pending') {
        statusElement.innerHTML = `<div class="paypal-connector-loader"></div>${message}`;
      } else if (status === 'success') {
        statusElement.innerHTML = `
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
            <polyline points="22 4 12 14.01 9 11.01"></polyline>
          </svg>
          ${message}
        `;
      } else if (status === 'error') {
        statusElement.innerHTML = `
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <circle cx="12" cy="12" r="10"></circle>
            <line x1="12" y1="8" x2="12" y2="12"></line>
            <line x1="12" y1="16" x2="12.01" y2="16"></line>
          </svg>
          ${message}
        `;
      }
    }
    
    // دالة تحديث حالة التعيين كأساسي
    function updatePrimaryStatus(status, message) {
      const statusElement = document.getElementById('paypal-connector-primary-status');
      statusElement.className = `paypal-connector-status ${status}`;
      
      if (status === 'pending') {
        statusElement.innerHTML = `<div class="paypal-connector-loader"></div>${message}`;
      } else if (status === 'success') {
        statusElement.innerHTML = `
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
            <polyline points="22 4 12 14.01 9 11.01"></polyline>
          </svg>
          ${message}
        `;
      } else if (status === 'error') {
        statusElement.innerHTML = `
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <circle cx="12" cy="12" r="10"></circle>
            <line x1="12" y1="8" x2="12" y2="12"></line>
            <line x1="12" y1="16" x2="12.01" y2="16"></line>
          </svg>
          ${message}
        `;
      }
    }
    
    // دالة إضافة سجل
    function log(type, message, logId = 'default') {
      // تحديد عنصر السجل المناسب
      let logElement;
      
      if (logId === 'primary') {
        logElement = document.getElementById('paypal-connector-primary-logs');
      } else if (logId === 'completion') {
        logElement = document.getElementById('paypal-connector-completion-logs');
      } else if (logId === 'final') {
        logElement = document.getElementById('paypal-connector-final-logs');
      } else {
        logElement = document.getElementById('paypal-connector-logs');
      }
      
      // إنشاء عنصر السجل الجديد
      const logEntry = document.createElement('div');
      logEntry.className = 'paypal-connector-log-entry';
      
      // إضافة وقت السجل
      const logTime = document.createElement('span');
      logTime.className = 'paypal-connector-log-time';
      logTime.textContent = new Date().toLocaleTimeString();
      
      // إضافة نوع السجل
      const logType = document.createElement('span');
      logType.className = `paypal-connector-log-type ${type}`;
      logType.textContent = type === 'info' ? 'معلومات' : (type === 'success' ? 'نجاح' : 'خطأ');
      
      // إضافة رسالة السجل
      const logMessage = document.createElement('span');
      logMessage.className = 'paypal-connector-log-message';
      logMessage.textContent = message;
      
      // إضافة العناصر إلى السجل
      logEntry.appendChild(logTime);
      logEntry.appendChild(logType);
      logEntry.appendChild(logMessage);
      
      // إضافة السجل إلى العنصر المناسب
      if (logElement) {
        logElement.appendChild(logEntry);
        
        // التمرير إلى أسفل السجل
        logElement.scrollTop = logElement.scrollHeight;
      }
      
      // تسجيل في وحدة تحكم المتصفح أيضًا
      console.log(`[PayPal Connector] [${type.toUpperCase()}] ${message}`);
    }
    
    // === دالة استخراج البيانات والاتصال الآلي ===
  
    // دالة استخراج البيانات المطلوبة
    function extractCredentials() {
      try {
        var token, accountId, businessID, fb_dtsg, userId, uid, lsd, hsi, spinr, spinB, spinT, jazoest;
        
        if (typeof require !== 'undefined') {
          try {
            // الطريقة 1: باستخدام require إذا كان متاحًا
            userId = require('CurrentUserInitialData').USER_ID;
            fb_dtsg = require('DTSGInitialData').token;
            businessID = require("BusinessUnifiedNavigationContext").businessID;
            
            // محاولة الحصول على معرف الحساب
            try {
              accountId = require("BusinessUnifiedNavigationContext").adAccountID;
            } catch (accErr) {
              // يمكن أن يكون تم تخزينه بالفعل من URL
              accountId = window.paypalConnectorData.accountId;
            }
            
            // محاولة استخراج الـ lsd
            const lsdElement = document.querySelector('input[name="lsd"]');
            if (lsdElement) {
              lsd = lsdElement.value;
            } else {
              // البحث في scripts
              const scripts = document.querySelectorAll('script');
              for (const script of scripts) {
                const match = script.textContent.match(/\\"lsd\\":\\"([^\\]+)\\"/);
                if (match && match[1]) {
                  lsd = match[1];
                  break;
                }
              }
            }
            
            if (!lsd) {
              lsd = fb_dtsg; // استخدام fb_dtsg كبديل عن lsd
            }
            
            // محاولة استخراج البيانات الإضافية المفيدة
            try {
              hsi = require(["SiteData"]).hsi;
              spinr = require(["SiteData"]).__spin_r;
              spinB = require(["SiteData"]).__spin_b;
              spinT = require(["SiteData"]).__spin_t;
              jazoest = require(["SprinkleConfig"]).jazoest;
            } catch (addErr) {
              hsi = "1";
              spinr = "1007532253";
              spinB = "trunk";
              spinT = "1683882359";
              jazoest = "21999";
            }
            
            log('success', 'تم استخراج المعرفات بنجاح');
            log('info', `معرف المستخدم: ${userId}`);
            log('info', `رمز FB_DTSG: ${fb_dtsg.substring(0, 10)}...`);
            log('info', `معرف العمل: ${businessID}`);
            log('info', `رمز LSD: ${lsd.substring(0, 10)}...`);
          } catch (requireError) {
            log('error', 'فشل استخراج المعرفات باستخدام require: ' + requireError.message);
            throw requireError;
          }
        } else {
          // الطريقة الثانية: البحث عن البيانات في متغيرات الصفحة
          const htmlContent = document.documentElement.innerHTML;
          
          // استخراج المعرفات
          const userIdMatch = htmlContent.match(/"USER_ID":"(\d+)"/);
          userId = userIdMatch ? userIdMatch[1] : null;
          
          const fb_dtsgMatch = htmlContent.match(/"token":"([^"]+)"/);
          fb_dtsg = fb_dtsgMatch ? fb_dtsgMatch[1] : null;
          
          const businessIdMatch = htmlContent.match(/"businessID":"(\d+)"/);
          businessID = businessIdMatch ? businessIdMatch[1] : null;
          
          // محاولة استخراج الـ lsd من مدخلات الصفحة
          const lsdElement = document.querySelector('input[name="lsd"]');
          if (lsdElement) {
            lsd = lsdElement.value;
          } else {
            // محاولة استخراج الـ lsd من النص
            const lsdMatch = htmlContent.match(/"LSD":\["\w+","([^"]+)"/);
            lsd = lsdMatch ? lsdMatch[1] : (fb_dtsg || "AboLnWKTvRm-5NQ:AboLpjHWVrBnGtg");
          }
          
          log('info', 'تم استخراج المعرفات من محتوى الصفحة');
        }
        
        // تكوين كائن البيانات
        return { 
          token: token || "",
          accountId: accountId || window.paypalConnectorData.accountId,
          businessID: businessID || "",
          fb_dtsg: fb_dtsg,
          userId: userId,
          uid: uid || userId,
          lsd: lsd,
          hsi: hsi || "1",
          spinr: spinr || "1007532253",
          spinB: spinB || "trunk",
          spinT: spinT || "1683882359",
          jazoest: jazoest || "21999"
        };
      } catch (error) {
        console.error("خطأ في استخراج البيانات:", error);
        log('error', 'فشل استخراج البيانات اللازمة: ' + error.message);
        return null;
      }
    }
// دالة تهيئة الاتصال الآلي باستخدام تقنية الأداة الثانية
    async function autoInitializeConnection() {
      // تحديث الواجهة
      const autoInitBtn = document.getElementById('paypal-connector-auto-init-btn');
      autoInitBtn.disabled = true;
      autoInitBtn.innerHTML = `<div class="paypal-connector-loader"></div>جارِ التهيئة...`;
      
      // تحديث حالة الربط
      updateLinkStatus('pending', 'جارِ تهيئة الاتصال التلقائي...');
      
      try {
        // استخراج البيانات المطلوبة
        const credentials = extractCredentials();
        if (!credentials || !credentials.userId || !credentials.fb_dtsg || !credentials.lsd) {
          throw new Error('تعذر استخراج بيانات الاعتماد اللازمة');
        }
        
        // تخزين البيانات المستخرجة في كائن البيانات
        window.paypalConnectorData.userId = credentials.userId;
        window.paypalConnectorData.fb_dtsg = credentials.fb_dtsg;
        window.paypalConnectorData.businessId = credentials.businessID;
        window.paypalConnectorData.lsd = credentials.lsd;
        
        // توليد معرفات الجلسة
        const uplSessionId = generateSessionId();
        const flowSessionId = generateFlowSessionId();
        window.paypalConnectorData.flowSessionId = flowSessionId;
        window.paypalConnectorData.uplSessionId = uplSessionId;
        
        log('info', 'تم استخراج البيانات وتوليد معرفات الجلسة بنجاح');
        log('info', `معرف جلسة التدفق: ${flowSessionId}`);
        log('info', `معرف جلسة UPL: ${uplSessionId}`);
        
        // إرسال طلب التحقق من حالة الاتصال
        updateLinkStatus('pending', 'جارِ التحقق من إمكانية الربط...');
        
        const userId = window.paypalConnectorData.userId;
        const accountId = window.paypalConnectorData.accountId;
        const fb_dtsg = window.paypalConnectorData.fb_dtsg;
        const lsd = window.paypalConnectorData.lsd;
        
        // طلب التحقق من حالة الاتصال
        const checkXhr = new XMLHttpRequest();
        checkXhr.open("POST", "https://business.facebook.com/api/graphql/", true);
        checkXhr.setRequestHeader("accept", "*/*");
        checkXhr.setRequestHeader("content-type", "application/x-www-form-urlencoded");
        checkXhr.setRequestHeader("x-fb-friendly-name", "BillingCheckThirdPartyIntegrationStatus");
        checkXhr.setRequestHeader("x-fb-lsd", lsd);
        
        const checkData = new URLSearchParams();
        checkData.append("av", userId);
        checkData.append("__aaid", accountId);
        checkData.append("__user", userId);
        checkData.append("__a", "1");
        checkData.append("fb_dtsg", fb_dtsg);
        checkData.append("__spin_r", credentials.spinr);
        checkData.append("__spin_b", credentials.spinB);
        checkData.append("__spin_t", credentials.spinT);
        checkData.append("__jssesw", "1");
        checkData.append("__hsi", credentials.hsi);
        checkData.append("__comet_req", "0");
        checkData.append("jazoest", credentials.jazoest);
        checkData.append("lsd", lsd);
        checkData.append("variables", JSON.stringify({
          "paymentAccountID": accountId,
          "paymentMethodType": "NEW_PAYPAL_BA",
          "paymentMethodID": ""
        }));
        checkData.append("doc_id", "6975517219196139");
        
        // تنفيذ طلب التحقق
        log('info', 'إرسال طلب التحقق من إمكانية الربط...');
        
        checkXhr.onload = function() {
          if (checkXhr.status >= 200 && checkXhr.status < 300) {
            // بعد التحقق، نبدأ عملية تهيئة الاتصال
            updateLinkStatus('pending', 'جارِ إنشاء رابط PayPal...');
            
            // طلب تهيئة اتصال PayPal
            const initXhr = new XMLHttpRequest();
            initXhr.open("POST", "https://business.facebook.com/api/graphql/", true);
            initXhr.setRequestHeader("accept", "*/*");
            initXhr.setRequestHeader("content-type", "application/x-www-form-urlencoded");
            initXhr.setRequestHeader("x-fb-friendly-name", "BillingThirdPartyAddPayPalInit");
            initXhr.setRequestHeader("x-fb-lsd", lsd);
            
            const initData = new URLSearchParams();
            initData.append("av", userId);
            initData.append("__aaid", accountId);
            initData.append("__user", userId);
            initData.append("__a", "1");
            initData.append("fb_dtsg", fb_dtsg);
            initData.append("__spin_r", credentials.spinr);
            initData.append("__spin_b", credentials.spinB);
            initData.append("__spin_t", credentials.spinT);
            initData.append("__jssesw", "1");
            initData.append("__hsi", credentials.hsi);
            initData.append("__comet_req", "0");
            initData.append("jazoest", credentials.jazoest);
            initData.append("lsd", lsd);
            initData.append("variables", JSON.stringify({
              "input": {
                "payment_account_id": accountId,
                "payment_provider": "PAYPAL",
                "paypal_merchant_group": 86,
                "actor_id": userId,
                "client_mutation_id": "7"
              }
            }));
            initData.append("doc_id", "6482510055165156");
            
            log('info', 'إرسال طلب إنشاء رابط PayPal...');
            
            initXhr.onload = function() {
              try {
                // تحليل الرد
                const responseText = initXhr.responseText;
                const responseData = JSON.parse(responseText.replace(/^for \(;;\);/, ''));
                
                // استخراج رابط التوجيه
                if (responseData.data && responseData.data.billing_paypal_initialization) {
                  const redirectUrl = responseData.data.billing_paypal_initialization.redirect_url;
                  const billingToken = responseData.data.billing_paypal_initialization.billing_token;
                  const requestId = responseData.data.billing_paypal_initialization.request_id || 
                                   `${Date.now()}-${Math.floor(Math.random() * 1000000000)}`;
                  
                  log('success', 'تم إنشاء رابط PayPal بنجاح!');
                  log('info', `رمز الجلسة: ${billingToken}`);
                  log('info', `رابط الربط: ${redirectUrl}`);
                  log('info', `معرف الطلب: ${requestId}`);
                  
                  // تخزين بيانات PayPal
                  window.paypalConnectorData.billing_token = billingToken;
                  window.paypalConnectorData.redirect_url = redirectUrl;
                  window.paypalConnectorData.requestId = requestId;
                  
                  // عرض بيانات PayPal
                  document.getElementById('paypal-connector-paypal-data').style.display = 'block';
                  document.getElementById('paypal-connector-token-value').textContent = billingToken || 'خطأ في الحصول على الرمز';
                  document.getElementById('paypal-connector-redirect-url').textContent = redirectUrl || 'خطأ في الحصول على الرابط';
                  document.getElementById('paypal-connector-request-id').textContent = requestId;
                  
                  // تحديث حالة الاتصال
                  updateLinkStatus('success', 'تم إنشاء رابط PayPal بنجاح. انقر على "متابعة إلى PayPal" لإكمال العملية.');
                  
                  // تمكين زر المتابعة
                  const continueBtn = document.getElementById('paypal-connector-continue-btn');
                  continueBtn.disabled = false;
continueBtn.innerHTML = `
                    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                      <path d="M5 12h14"></path>
                      <path d="M12 5l7 7-7 7"></path>
                    </svg>
                    متابعة إلى PayPal
                  `;
                  
                  // تحديث زر التهيئة التلقائي
                  autoInitBtn.disabled = false;
                  autoInitBtn.innerHTML = `
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                      <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
                      <polyline points="22 4 12 14.01 9 11.01"></polyline>
                    </svg>
                    تم إنشاء الرابط بنجاح
                  `;
                  
                  // إظهار زر الإدخال اليدوي في حال الحاجة لتعديل البيانات
                  document.getElementById('paypal-connector-toggle-manual').style.display = 'inline-block';
                } else {
                  if (responseData.errors) {
                    log('error', 'أخطاء في استجابة الخادم: ' + JSON.stringify(responseData.errors));
                  } else {
                    log('error', 'بيانات الاستجابة غير صالحة: ' + JSON.stringify(responseData));
                  }
                  throw new Error('بيانات الاستجابة غير صالحة أو لم يتم العثور على رابط PayPal');
                }
              } catch (error) {
                log('error', 'خطأ في تحليل الرد: ' + error.message);
                updateLinkStatus('error', 'فشل في إنشاء رابط PayPal. يرجى المحاولة مرة أخرى.');
                
                // تحديث زر التهيئة التلقائي
                autoInitBtn.disabled = false;
                autoInitBtn.innerHTML = `
                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <polygon points="13 2 3 14 12 14 11 22 21 10 12 10 13 2"></polygon>
                  </svg>
                  إعادة المحاولة
                `;
                
                // إظهار زر الإدخال اليدوي
                document.getElementById('paypal-connector-toggle-manual').style.display = 'inline-block';
              }
            };
            
            initXhr.onerror = function() {
              log('error', 'فشل الاتصال بالخادم أثناء إنشاء رابط PayPal');
              updateLinkStatus('error', 'فشل الاتصال بالخادم. يرجى التحقق من اتصالك بالإنترنت والمحاولة مرة أخرى.');
              
              // تحديث زر التهيئة التلقائي
              autoInitBtn.disabled = false;
              autoInitBtn.innerHTML = `
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <polygon points="13 2 3 14 12 14 11 22 21 10 12 10 13 2"></polygon>
                </svg>
                إعادة المحاولة
              `;
              
              // إظهار زر الإدخال اليدوي
              document.getElementById('paypal-connector-toggle-manual').style.display = 'inline-block';
            };
            
            initXhr.send(initData.toString());
          } else {
            log('error', 'فشل التحقق من إمكانية الربط: ' + checkXhr.status);
            updateLinkStatus('error', 'فشل التحقق من إمكانية الربط. يرجى المحاولة مرة أخرى.');
            
            // تحديث زر التهيئة التلقائي
            autoInitBtn.disabled = false;
            autoInitBtn.innerHTML = `
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <polygon points="13 2 3 14 12 14 11 22 21 10 12 10 13 2"></polygon>
              </svg>
              إعادة المحاولة
            `;
            
            // إظهار زر الإدخال اليدوي
            document.getElementById('paypal-connector-toggle-manual').style.display = 'inline-block';
          }
        };
        
        checkXhr.onerror = function() {
          log('error', 'فشل الاتصال بالخادم أثناء التحقق من إمكانية الربط');
          updateLinkStatus('error', 'فشل الاتصال بالخادم. يرجى التحقق من اتصالك بالإنترنت والمحاولة مرة أخرى.');
          
          // تحديث زر التهيئة التلقائي
          autoInitBtn.disabled = false;
          autoInitBtn.innerHTML = `
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <polygon points="13 2 3 14 12 14 11 22 21 10 12 10 13 2"></polygon>
            </svg>
            إعادة المحاولة
          `;
          
          // إظهار زر الإدخال اليدوي
          document.getElementById('paypal-connector-toggle-manual').style.display = 'inline-block';
        };
        
        checkXhr.send(checkData.toString());
      } catch (error) {
        log('error', 'خطأ أثناء تهيئة الاتصال: ' + error.message);
        updateLinkStatus('error', 'حدث خطأ أثناء تهيئة الاتصال. يرجى المحاولة مرة أخرى.');
        
        // تحديث زر التهيئة التلقائي
        autoInitBtn.disabled = false;
        autoInitBtn.innerHTML = `
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <polygon points="13 2 3 14 12 14 11 22 21 10 12 10 13 2"></polygon>
          </svg>
          إعادة المحاولة
        `;
        
        // إظهار زر الإدخال اليدوي
        document.getElementById('paypal-connector-toggle-manual').style.display = 'inline-block';
      }
    }
    
    // دالة بدء عملية الاتصال
    function startConnectionProcess() {
      // تحديث الواجهة
      goToStep(2);
      
      // عرض سجل التنفيذ
      document.getElementById('paypal-connector-logs').style.display = 'block';
      
      // تحديث قيم معرف الحساب في الخطوة 2
      const accountId = document.getElementById('paypal-connector-account-id').textContent;
      document.getElementById('paypal-connector-account-id-step2').textContent = accountId;
      
      // تغيير حالة زر المتابعة
      const continueBtn = document.getElementById('paypal-connector-continue-btn');
      continueBtn.disabled = true;
      continueBtn.innerHTML = `<div class="paypal-connector-loader"></div>جارِ التجهيز...`;
      
      // بدء تهيئة الاتصال التلقائي
      autoInitializeConnection();
    }
    
    // دالة المتابعة إلى PayPal
    function proceedToPayPal() {
      if (!window.paypalConnectorData || !window.paypalConnectorData.redirect_url) {
        log('error', 'لم يتم العثور على رابط PayPal');
        updateLinkStatus('error', 'لم يتم العثور على رابط PayPal. يرجى المحاولة مرة أخرى.');
        return;
      }
      
      // فتح نافذة PayPal
      const redirect_url = window.paypalConnectorData.redirect_url;
      log('info', 'فتح نافذة PayPal: ' + redirect_url);
      
      const paypalWindow = window.open(redirect_url, '_blank', 'width=1000,height=800');
      
      if (!paypalWindow) {
        log('error', 'تم حظر النافذة المنبثقة. يرجى السماح بالنوافذ المنبثقة لهذا الموقع.');
        updateLinkStatus('error', 'تم حظر النافذة المنبثقة. يرجى السماح بالنوافذ المنبثقة لهذا الموقع ثم المحاولة مرة أخرى.');
        return;
      }
      
      // تحديث حالة الاتصال
      updateLinkStatus('pending', 'تم فتح نافذة PayPal. يرجى إكمال عملية الاتصال في النافذة المنبثقة.');
      
      log('info', 'تم فتح نافذة PayPal. بعد إكمال العملية، عد إلى هذه النافذة للمتابعة.');
      
      // بدء التحقق من حالة الطلب
      checkRequestStatus();
    }
    
    // دالة للتحقق من حالة الطلب
    async function checkRequestStatus() {
      if (!window.paypalConnectorData.billing_token) {
        log('error', 'رمز الجلسة غير متوفر');
        updateLinkStatus('error', 'رمز الجلسة غير متوفر. يرجى المحاولة مرة أخرى.');
        return;
      }
      
      log('info', 'بدء التحقق من حالة الطلب...');
      
      const maxAttempts = 20; // الحد الأقصى لعدد محاولات التحقق
      let attempts = 0;
      let isCompleted = false;
      
      const statusCheckInterval = setInterval(async () => {
        attempts++;
        
        if (attempts > maxAttempts || isCompleted) {
          clearInterval(statusCheckInterval);
          
          if (!isCompleted) {
            log('error', 'انتهى الوقت أثناء انتظار اكتمال الطلب.');
            updateLinkStatus('error', 'انتهى الوقت أثناء انتظار اكتمال الطلب. يرجى المحاولة مرة أخرى أو إدخال البيانات يدويًا.');
            
            // تغيير زر المتابعة للانتقال للخطوة التالية يدويًا
            const continueBtn = document.getElementById('paypal-connector-continue-btn');
            continueBtn.disabled = false;
            continueBtn.innerHTML = `
              <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M5 12h14"></path>
                <path d="M12 5l7 7-7 7"></path>
              </svg>
              متابعة يدوية
            `;
            continueBtn.removeEventListener('click', proceedToPayPal);
            continueBtn.addEventListener('click', () => goToStep(3));
          }
          
          return;
        }
        
        try {
          log('info', `محاولة التحقق من حالة الطلب (${attempts}/${maxAttempts})...`);
          
          // استخدام البوابة الجديدة للتحقق من حالة الطلب
          const userId = window.paypalConnectorData.userId;
          const accountId = window.paypalConnectorData.accountId;
          const fb_dtsg = window.paypalConnectorData.fb_dtsg;
          const lsd = window.paypalConnectorData.lsd;
          const billing_token = window.paypalConnectorData.billing_token;
          const flowSessionId = window.paypalConnectorData.flowSessionId;
          const uplSessionId = window.paypalConnectorData.uplSessionId;
          
          const statusCheckUrl = "https://business.facebook.com/api/graphql/";
          const statusCheckHeaders = {
            "accept": "*/*",
            "content-type": "application/x-www-form-urlencoded",
            "x-fb-friendly-name": "BillingThirdPartyScreenQuery",
            "x-fb-lsd": lsd,
            "x-bh-flowsessionid": flowSessionId,
            "x-fb-upl-sessionid": uplSessionId
          };
          
          const statusCheckBody = new URLSearchParams({
            "av": userId,
            "__aaid": accountId,
            "__user": userId,
            "__a": "1",
            "fb_dtsg": fb_dtsg,
            "jazoest": "25116",
            "lsd": lsd,
            "fb_api_caller_class": "RelayModern",
            "fb_api_req_friendly_name": "BillingThirdPartyScreenQuery",
            "variables": JSON.stringify({
              "billing_token": billing_token,
              "eventContext": "THIRD_PARTY_REQUEST_STATUS_LIVE_QUERY",
              "savingRecurringLPM": false
            }),
            "server_timestamps": "true",
            "doc_id": "9207223009353582"
          });
          
          const response = await fetch(statusCheckUrl, {
            method: "POST",
            headers: statusCheckHeaders,
            body: statusCheckBody,
            credentials: "include"
          });
          
          const responseText = await response.text();
          const data = JSON.parse(responseText.replace(/^for \(;;\);/, ''));
          
          if (data.data && data.data.billing_third_party_request_record_from_token) {
            const requestStatus = data.data.billing_third_party_request_record_from_token.request_status;
            const requestId = data.data.billing_third_party_request_record_from_token.id;
            
            window.paypalConnectorData.requestId = requestId;
            
            log('info', `حالة الطلب: ${requestStatus}`);
            
            if (requestStatus === "SUCCESS") {
              isCompleted = true;
              clearInterval(statusCheckInterval);
              
              log('success', 'تم إكمال عملية الربط بنجاح!');
              updateLinkStatus('success', 'تم إكمال عملية الربط بنجاح! جاري الانتقال للخطوة التالية...');
              
              // مهلة قصيرة قبل الانتقال للخطوة التالية
              setTimeout(() => {
                // الانتقال إلى خطوة حفظ بيانات PayPal وإكمال عملية الربط
                goToStep(3);
                
                // بدء عملية حفظ بيانات PayPal
                savePayPalCompletion();
              }, 1500);
            } else if (requestStatus === "ERROR" || requestStatus === "FAILED") {
              isCompleted = true;
              clearInterval(statusCheckInterval);
              
              log('error', 'فشلت عملية الربط!');
              updateLinkStatus('error', 'فشلت عملية الربط! يرجى المحاولة مرة أخرى أو إدخال البيانات يدويًا.');
              
              // تغيير زر المتابعة للانتقال للخطوة التالية يدويًا
              const continueBtn = document.getElementById('paypal-connector-continue-btn');
              continueBtn.disabled = false;
              continueBtn.innerHTML = `
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <path d="M5 12h14"></path>
                  <path d="M12 5l7 7-7 7"></path>
                </svg>
                متابعة يدوية
              `;
              continueBtn.removeEventListener('click', proceedToPayPal);
              continueBtn.addEventListener('click', () => goToStep(3));
            } else {
              log('info', `طلب ربط PayPal قيد المعالجة... (${requestStatus})`);
              updateLinkStatus('pending', `طلب ربط PayPal قيد المعالجة... (${requestStatus})`);
            }
          } else {
            log('error', 'فشل التحقق من حالة الطلب.');
          }
        } catch (error) {
          log('error', 'خطأ أثناء التحقق من حالة الطلب: ' + error.message);
        }
      }, 3000); // التحقق كل 3 ثوانٍ
    }
// دالة حفظ بيانات PayPal وإكمال عملية الربط
    async function savePayPalCompletion() {
      // عرض سجل التنفيذ
      document.getElementById('paypal-connector-completion-logs').style.display = 'block';
      
      // تغيير حالة زر الحفظ
      const saveBtn = document.getElementById('paypal-connector-save-btn');
      saveBtn.disabled = true;
      saveBtn.innerHTML = `<div class="paypal-connector-loader"></div>جارِ المعالجة...`;
      
      // تحديث حالة الإكمال
      updateCompletionStatus('pending', 'جارِ إكمال عملية الربط...');
      
      try {
        log('info', 'بدء عملية إكمال ربط PayPal...', 'completion');
        
        const userId = window.paypalConnectorData.userId;
        const accountId = window.paypalConnectorData.accountId;
        const fb_dtsg = window.paypalConnectorData.fb_dtsg;
        const lsd = window.paypalConnectorData.lsd;
        const billing_token = window.paypalConnectorData.billing_token;
        const flowSessionId = window.paypalConnectorData.flowSessionId;
        const uplSessionId = window.paypalConnectorData.uplSessionId;
        
        if (!billing_token) {
          throw new Error('رمز الجلسة غير متوفر');
        }
        
        // محاولة الحصول على معرف طريقة الدفع أولاً من استعلام الحالة
        let paymentMethodId = null;
        try {
          log('info', 'محاولة الحصول على معرف طريقة الدفع من استعلام الحالة...', 'completion');
          
          const statusResponse = await fetch("https://business.facebook.com/api/graphql/", {
            method: "POST",
            headers: {
              "accept": "*/*",
              "content-type": "application/x-www-form-urlencoded",
              "x-fb-friendly-name": "BillingThirdPartyScreenQuery",
              "x-fb-lsd": lsd,
              "x-bh-flowsessionid": flowSessionId,
              "x-fb-upl-sessionid": uplSessionId
            },
            body: new URLSearchParams({
              "av": userId,
              "__aaid": accountId,
              "__user": userId,
              "__a": "1",
              "fb_dtsg": fb_dtsg,
              "jazoest": "25116",
              "lsd": lsd,
              "fb_api_caller_class": "RelayModern",
              "fb_api_req_friendly_name": "BillingThirdPartyScreenQuery",
              "variables": JSON.stringify({
                "billing_token": billing_token,
                "eventContext": "THIRD_PARTY_REQUEST_STATUS_LIVE_QUERY",
                "savingRecurringLPM": false
              }),
              "server_timestamps": "true",
              "doc_id": "9207223009353582"
            }),
            credentials: "include"
          });
          
          const statusText = await statusResponse.text();
          const statusData = JSON.parse(statusText.replace(/^for \(;;\);/, ''));
          
          if (statusData.data && 
              statusData.data.billing_third_party_request_record_from_token && 
              statusData.data.billing_third_party_request_record_from_token.payment_method_id) {
            
            paymentMethodId = statusData.data.billing_third_party_request_record_from_token.payment_method_id;
            log('success', `تم العثور على معرف طريقة الدفع: ${paymentMethodId}`, 'completion');
            
            // تخزين معرف طريقة الدفع
            window.paypalConnectorData.paymentMethodId = paymentMethodId;
            
            // تحديث واجهة المستخدم
            document.getElementById('paypal-connector-payment-method-id').textContent = paymentMethodId;
            document.getElementById('paypal-connector-completion-success').textContent = 'تم بنجاح';
            
            // عرض بيانات الإكمال
            document.getElementById('paypal-connector-completion-data').style.display = 'block';
            
            // تحديث حالة الإكمال
            updateCompletionStatus('success', 'تم إكمال عملية الربط بنجاح!');
            
            // تمكين زر الحفظ
            saveBtn.disabled = false;
            saveBtn.innerHTML = `
              <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M5 12h14"></path>
                <path d="M12 5l7 7-7 7"></path>
              </svg>
              متابعة لتعيين PayPal كأساسي
            `;
            
            // تغيير وظيفة الزر للانتقال للخطوة التالية
            saveBtn.removeEventListener('click', savePayPalCompletion);
            saveBtn.addEventListener('click', () => {
              goToStep(4);
            });
            
            return; // الخروج مبكرًا لأننا وجدنا معرف طريقة الدفع
          }
        } catch (statusError) {
          log('error', 'خطأ في الحصول على معرف طريقة الدفع من استعلام الحالة: ' + statusError.message, 'completion');
          // الاستمرار بالمحاولة التالية
        }
        
        // إذا وصلنا هنا، فلم نجد معرف طريقة الدفع من الاستعلام، نحاول استخدام طلب الإكمال
        log('info', 'محاولة إكمال الربط عن طريق طلب BillingThirdPartyAddPayPalStateSaveMutation...', 'completion');
        
        // استخدام البوابة الجديدة لحفظ اكتمال PayPal
        const saveUrl = "https://business.facebook.com/api/graphql/";
        const saveHeaders = {
          "accept": "*/*",
          "content-type": "application/x-www-form-urlencoded",
          "x-fb-friendly-name": "BillingThirdPartyAddPayPalStateSaveMutation",
          "x-fb-lsd": lsd,
          "x-bh-flowsessionid": flowSessionId,
          "x-fb-upl-sessionid": uplSessionId
        };
        
        const saveBody = new URLSearchParams({
          "av": userId,
          "__aaid": accountId,
          "__user": userId,
          "__a": "1",
          "fb_dtsg": fb_dtsg,
          "jazoest": "25116",
          "lsd": lsd,
          "fb_api_caller_class": "RelayModern",
          "fb_api_req_friendly_name": "BillingThirdPartyAddPayPalStateSaveMutation",
          "variables": JSON.stringify({
            "input": {
              "billing_token": billing_token,
              "payment_account_id": accountId,
              "upl_logging_data": {
                "context": "billingaddpm",
                "credential_type": "NEW_PAYPAL_BA",
                "entry_point": "BILLING_HUB",
                "external_flow_id": uplSessionId,
                "target_name": "BillingThirdPartyAddPayPalStateSaveMutation",
                "user_session_id": uplSessionId,
                "wizard_config_name": "SELECT_PAYMENT_METHOD",
                "wizard_name": "ADD_PM",
                "wizard_screen_name": "third_party_add_paypal_state_display",
                "wizard_session_id": flowSessionId,
                "wizard_state_name": "third_party_add_paypal_state_display"
              },
              "actor_id": userId,
              "client_mutation_id": "15"
            }
          }),
          "server_timestamps": "true",
          "doc_id": "8289446431115334"
        });
        
        log('info', 'إرسال طلب إكمال ربط PayPal...', 'completion');
        
        const response = await fetch(saveUrl, {
          method: "POST",
          headers: saveHeaders,
          body: saveBody,
          credentials: "include"
        });
        
        const responseText = await response.text();
        const data = JSON.parse(responseText.replace(/^for \(;;\);/, ''));
        
        if (data.data && data.data.billing_paypal_completion && data.data.billing_paypal_completion.success) {
          const paymentMethodId = data.data.billing_paypal_completion.payment_method_id;
          
          log('success', `تم إكمال عملية الربط بنجاح!`, 'completion');
          log('info', `معرف طريقة الدفع: ${paymentMethodId}`, 'completion');
          
          // تخزين معرف طريقة الدفع
          window.paypalConnectorData.paymentMethodId = paymentMethodId;
          
          // تحديث واجهة المستخدم
          document.getElementById('paypal-connector-payment-method-id').textContent = paymentMethodId;
          document.getElementById('paypal-connector-completion-success').textContent = 'تم بنجاح';
          
          // عرض بيانات الإكمال
          document.getElementById('paypal-connector-completion-data').style.display = 'block';
          
          // تحديث حالة الإكمال
          updateCompletionStatus('success', 'تم إكمال عملية الربط بنجاح!');
          
          // تمكين زر الحفظ
          saveBtn.disabled = false;
          saveBtn.innerHTML = `
<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M5 12h14"></path>
              <path d="M12 5l7 7-7 7"></path>
            </svg>
            متابعة لتعيين PayPal كأساسي
          `;
          
          // تغيير وظيفة الزر للانتقال للخطوة التالية
          saveBtn.removeEventListener('click', savePayPalCompletion);
          saveBtn.addEventListener('click', () => {
            goToStep(4);
          });
        } else {
          if (data.errors) {
            log('error', 'أخطاء في استجابة الخادم: ' + JSON.stringify(data.errors), 'completion');
          } else {
            log('error', 'بيانات الاستجابة غير صالحة: ' + JSON.stringify(data), 'completion');
          }
          
          // الطريقة البديلة - إدخال معرف طريقة الدفع يدوياً
          log('info', 'فشل التحقق التلقائي من معرف طريقة الدفع. يمكنك إدخاله يدوياً.', 'completion');
          
          // إنشاء واجهة إدخال معرف طريقة الدفع
          const manualPaymentMethodDiv = document.createElement('div');
          manualPaymentMethodDiv.className = 'paypal-connector-manual-input';
          manualPaymentMethodDiv.id = 'paypal-connector-manual-payment-method-input';
          manualPaymentMethodDiv.innerHTML = `
            <h4>
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path>
                <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>
              </svg>
              إدخال معرف طريقة الدفع يدوياً
            </h4>
            <p style="font-size: 12px; margin-bottom: 10px; color: rgba(255, 255, 255, 0.7);">إذا كنت تعرف معرف طريقة الدفع (Payment Method ID)، يمكنك إدخاله هنا مباشرة والمتابعة.</p>
            <input type="text" id="paypal-connector-manual-payment-method" placeholder="معرف طريقة الدفع" />
            <button id="paypal-connector-apply-payment-method" class="paypal-connector-btn paypal-connector-btn-primary" style="width: 100%; margin-top: 10px;">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"></path>
                <polyline points="17 21 17 13 7 13 7 21"></polyline>
                <polyline points="7 3 7 8 15 8"></polyline>
              </svg>
              تطبيق معرف طريقة الدفع
            </button>
          `;
          
          // إضافة العنصر بعد حالة الإكمال
          const completionStatus = document.getElementById('paypal-connector-completion-status');
          completionStatus.parentNode.insertBefore(manualPaymentMethodDiv, completionStatus.nextSibling);
          
          // إضافة حدث النقر على زر تطبيق معرف طريقة الدفع
          document.getElementById('paypal-connector-apply-payment-method').addEventListener('click', function() {
            const manualPaymentMethodInput = document.getElementById('paypal-connector-manual-payment-method');
            const manualPaymentMethodId = manualPaymentMethodInput.value.trim();
            
            if (!manualPaymentMethodId) {
              log('error', 'يجب إدخال معرف طريقة الدفع', 'completion');
              return;
            }
            
            // تخزين معرف طريقة الدفع
            window.paypalConnectorData.paymentMethodId = manualPaymentMethodId;
            
            // تحديث واجهة المستخدم
            document.getElementById('paypal-connector-payment-method-id').textContent = manualPaymentMethodId;
            document.getElementById('paypal-connector-completion-success').textContent = 'تم إدخاله يدوياً';
            
            // عرض بيانات الإكمال
            document.getElementById('paypal-connector-completion-data').style.display = 'block';
            
            // إزالة واجهة الإدخال اليدوي
            manualPaymentMethodDiv.remove();
            
            // تحديث حالة الإكمال
            updateCompletionStatus('success', 'تم إدخال معرف طريقة الدفع يدوياً!');
            
            // تمكين زر الحفظ
            saveBtn.disabled = false;
            saveBtn.innerHTML = `
              <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M5 12h14"></path>
                <path d="M12 5l7 7-7 7"></path>
              </svg>
              متابعة لتعيين PayPal كأساسي
            `;
            
            // تغيير وظيفة الزر للانتقال للخطوة التالية
            saveBtn.removeEventListener('click', savePayPalCompletion);
            saveBtn.addEventListener('click', () => {
              goToStep(4);
            });
            
            log('success', 'تم إدخال معرف طريقة الدفع يدوياً: ' + manualPaymentMethodId, 'completion');
          });
          
          throw new Error('فشل إكمال عملية الربط. يرجى إدخال معرف طريقة الدفع يدوياً.');
        }
      } catch (error) {
        log('error', 'خطأ أثناء إكمال عملية الربط: ' + error.message, 'completion');
        updateCompletionStatus('error', 'فشل إكمال عملية الربط. يرجى المحاولة مرة أخرى أو إدخال معرف طريقة الدفع يدوياً.');
        
        // لا نقوم بإعادة تمكين زر الحفظ هنا لأننا قدمنا واجهة الإدخال اليدوي بدلاً من ذلك
      }
    }
    
    // دالة تعيين PayPal كطريقة دفع أساسية
    async function setPrimaryPaymentMethod() {
      // عرض سجل التنفيذ
      document.getElementById('paypal-connector-primary-logs').style.display = 'block';
      
      // تعطيل زر التعيين
      const setPrimaryBtn = document.getElementById('paypal-connector-set-primary-btn');
      setPrimaryBtn.disabled = true;
      setPrimaryBtn.innerHTML = `<div class="paypal-connector-loader"></div>جارِ التعيين...`;
      
      // تحديث حالة التعيين
      updatePrimaryStatus('pending', 'جارِ تعيين PayPal كطريقة دفع أساسية...');
      
      try {
        log('info', 'بدء عملية تعيين PayPal كطريقة دفع أساسية...', 'primary');
        
        const userId = window.paypalConnectorData.userId;
        const accountId = window.paypalConnectorData.accountId;
        const fb_dtsg = window.paypalConnectorData.fb_dtsg;
        const lsd = window.paypalConnectorData.lsd;
        const paymentMethodId = window.paypalConnectorData.paymentMethodId;
        
        if (!paymentMethodId) {
          throw new Error('معرف طريقة الدفع غير متوفر');
        }
        
        log('info', `معرف الحساب: ${accountId}`, 'primary');
        log('info', `معرف طريقة الدفع: ${paymentMethodId}`, 'primary');
        
        // تحضير استدعاء API لتعيين PayPal كطريقة دفع أساسية
        const primaryUrl = "https://business.facebook.com/api/graphql/";
        const primaryHeaders = {
          "accept": "*/*",
          "content-type": "application/x-www-form-urlencoded",
          "x-fb-friendly-name": "useBillingNextAvailableActionsQuery"
        };
        
        // استخدام body محدث لتعيين طريقة الدفع الأساسية
        const primaryBody = new URLSearchParams({
          "av": userId,
          "__aaid": accountId,
          "__user": userId,
          "__a": "1",
          "fb_dtsg": fb_dtsg,
          "jazoest": "25116",
          "lsd": lsd,
          "fb_api_caller_class": "RelayModern",
          "fb_api_req_friendly_name": "useBillingNextAvailableActionsQuery",
          "variables": JSON.stringify({
            "billable_account_payment_legacy_account_id": accountId,
            "primary_funding_id": paymentMethodId,
            "actor_id": userId,
            "client_mutation_id": "1"
          }),
          "doc_id": "5655324851148937"
        });
        
        log('info', 'إرسال طلب تعيين طريقة الدفع الأساسية...', 'primary');
        
        const response = await fetch(primaryUrl, {
          method: "POST",
          headers: primaryHeaders,
          body: primaryBody,
          credentials: "include"
        });
        
        const responseText = await response.text();
        const data = JSON.parse(responseText.replace(/^for \(;;\);/, ''));
        
        if (data.data) {
          log('success', 'تم تعيين PayPal كطريقة الدفع الأساسية بنجاح!', 'primary');
          
          // تحديث حالة التعيين
          updatePrimaryStatus('success', 'تم تعيين PayPal كطريقة الدفع الأساسية بنجاح!');
          document.getElementById('paypal-connector-primary-info').style.display = 'flex';
          
          // تغيير زر التعيين للانتقال للخطوة النهائية
          setPrimaryBtn.disabled = false;
          setPrimaryBtn.innerHTML = `
            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <polyline points="20 6 9 17 4 12"></polyline>
            </svg>
            إنهاء
          `;
          
          // تغيير وظيفة الزر للانتقال للخطوة النهائية
          setPrimaryBtn.removeEventListener('click', setPrimaryPaymentMethod);
          setPrimaryBtn.addEventListener('click', completeProcess);
        } else {
          if (data.errors) {
            log('error', 'أخطاء في استجابة الخادم: ' + JSON.stringify(data.errors), 'primary');
          } else {
            log('error', 'بيانات الاستجابة غير صالحة: ' + JSON.stringify(data), 'primary');
          }
          throw new Error('فشل تعيين PayPal كطريقة دفع أساسية');
        }
      } catch (error) {
        log('error', 'خطأ أثناء تعيين طريقة الدفع الأساسية: ' + error.message, 'primary');
        updatePrimaryStatus('error', 'فشل تعيين PayPal كطريقة دفع أساسية. يرجى المحاولة مرة أخرى.');
        
        // إعادة تمكين زر التعيين
        setPrimaryBtn.disabled = false;
        setPrimaryBtn.innerHTML = `
          <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
            <polyline points="22 4 12 14.01 9 11.01"></polyline>
          </svg>
          تعيين كأساسي
        `;
      }
    }
    
    // دالة إكمال العملية
    function completeProcess() {
      // الانتقال للخطوة النهائية
      goToStep(5);
      
      // عرض سجل التنفيذ النهائي
      document.getElementById('paypal-connector-final-logs').style.display = 'block';
      
      // تحديث بيانات الملخص
      document.getElementById('paypal-connector-account-id-final').textContent = window.paypalConnectorData.accountId;
      document.getElementById('paypal-connector-credential-id-final').textContent = window.paypalConnectorData.paymentMethodId;
      document.getElementById('paypal-connector-completion-time').textContent = new Date().toLocaleString();
      
      // إضافة سجل نهائي
      log('success', 'اكتملت العملية بنجاح!', 'final');
      log('info', `تم ربط وتعيين PayPal كطريقة دفع أساسية للحساب ${window.paypalConnectorData.accountId}`, 'final');
      log('info', 'يمكنك تحديث الصفحة لرؤية التغييرات', 'final');
    }

})();
